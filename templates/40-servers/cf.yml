AWSTemplateFormatVersion: "2010-09-09"
Description: Factorio Spot Price Servers () via Docker / ECS
Parameters:

  ECSAMI:
    Description: AWS ECS AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id

  FactorioImageTag:
    Type: String
    Description: "(Examples include latest, stable, 0.17, 0.17.33) Refer to tag descriptions available here: https://hub.docker.com/r/factoriotools/factorio/)"
    Default: latest

  InstancePurchaseMode:
    Type: String
    Description: "Spot: Much cheaper, but your instance might restart during gameplay with a few minutes of unsaved gameplay lost. On Demand: Instance will be created in on-demand mode. More expensive, but your gameplay is unlikely to be interrupted by the server going down."
    Default: "Spot"
    AllowedValues:
    - "On Demand"
    - "Spot"

  InstanceType:
    Type: String
    Description: "Spot: While m6a.large is a good instance type, you should leave this blank to get the best value instance for the provided specs. Override at your discretion: https://aws.amazon.com/ec2/instance-types/. On Demand: You must specify this. "
    Default: ""

  SpotPrice:
    Type: String
    Description: "Spot: the max cents/hr to pay for spot instance. On Demand: Ignored"
    Default: "0.05"

  SpotMinMemoryMiB:
    Type: Number
    Description: "Spot: the minimum desired memory for your instance. On Demand: Ignored"
    Default: 2048

  SpotMinVCpuCount:
    Type: Number
    Description: "Spot: the minimum desired VCPUs for your instance. On Demand: Ignored"
    Default: 2

  KeyPairName:
    Type: String
    Description: (Optional - An empty value disables this feature)
    Default: ''

  YourIp:
    Type: String
    Description: (Optional - An empty value disables this feature)
    Default: ''

  HostedZoneId:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance starts, supply the hosted zone ID here.
    Default: ''

  EnableRcon:
    Type: String
    Description: Refer to https://hub.docker.com/r/factoriotools/factorio/ for further RCON configuration details. This parameter simply opens / closes the port on the security group.
    Default: false
    AllowedValues:
    - true
    - false

  UpdateModsOnStart:
    Type: String
    Description: Refer to https://hub.docker.com/r/factoriotools/factorio/ for further configuration details.
    Default: false
    AllowedValues:
    - true
    - false

  # ====================================================
  # 1 - Server Specific Variables
  # ====================================================

  ServerState1:
    Type: String
    Description: "Running: A spot instance for Server 1 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName1:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 1 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 2 - Server Specific Variables
  # ====================================================

  ServerState2:
    Type: String
    Description: "Running: A spot instance for Server 2 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName2:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 2 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 3 - Server Specific Variables
  # ====================================================

  ServerState3:
    Type: String
    Description: "Running: A spot instance for Server 3 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName3:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 3 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 4 - Server Specific Variables
  # ====================================================

  ServerState4:
    Type: String
    Description: "Running: A spot instance for Server 4 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName4:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 4 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 5 - Server Specific Variables
  # ====================================================

  ServerState5:
    Type: String
    Description: "Running: A spot instance for Server 5 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName5:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 5 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 6 - Server Specific Variables
  # ====================================================

  ServerState6:
    Type: String
    Description: "Running: A spot instance for Server 6 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName6:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 6 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 7 - Server Specific Variables
  # ====================================================

  ServerState7:
    Type: String
    Description: "Running: A spot instance for Server 7 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName7:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 7 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 8 - Server Specific Variables
  # ====================================================

  ServerState8:
    Type: String
    Description: "Running: A spot instance for Server 8 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName8:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 8 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 9 - Server Specific Variables
  # ====================================================

  ServerState9:
    Type: String
    Description: "Running: A spot instance for Server 9 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName9:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 9 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 10 - Server Specific Variables
  # ====================================================

  ServerState10:
    Type: String
    Description: "Running: A spot instance for Server 10 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName10:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 10 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 11 - Server Specific Variables
  # ====================================================

  ServerState11:
    Type: String
    Description: "Running: A spot instance for Server 11 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName11:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 11 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 12 - Server Specific Variables
  # ====================================================

  ServerState12:
    Type: String
    Description: "Running: A spot instance for Server 12 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName12:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 12 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 13 - Server Specific Variables
  # ====================================================

  ServerState13:
    Type: String
    Description: "Running: A spot instance for Server 13 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName13:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 13 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 14 - Server Specific Variables
  # ====================================================

  ServerState14:
    Type: String
    Description: "Running: A spot instance for Server 14 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName14:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 14 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 15 - Server Specific Variables
  # ====================================================

  ServerState15:
    Type: String
    Description: "Running: A spot instance for Server 15 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName15:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 15 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 16 - Server Specific Variables
  # ====================================================

  ServerState16:
    Type: String
    Description: "Running: A spot instance for Server 16 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName16:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 16 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 17 - Server Specific Variables
  # ====================================================

  ServerState17:
    Type: String
    Description: "Running: A spot instance for Server 17 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName17:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 17 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 18 - Server Specific Variables
  # ====================================================

  ServerState18:
    Type: String
    Description: "Running: A spot instance for Server 18 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName18:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 18 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 19 - Server Specific Variables
  # ====================================================

  ServerState19:
    Type: String
    Description: "Running: A spot instance for Server 19 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName19:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 19 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 20 - Server Specific Variables
  # ====================================================

  ServerState20:
    Type: String
    Description: "Running: A spot instance for Server 20 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName20:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 20 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 21 - Server Specific Variables
  # ====================================================

  ServerState21:
    Type: String
    Description: "Running: A spot instance for Server 21 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName21:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 21 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 22 - Server Specific Variables
  # ====================================================

  ServerState22:
    Type: String
    Description: "Running: A spot instance for Server 22 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName22:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 22 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 23 - Server Specific Variables
  # ====================================================

  ServerState23:
    Type: String
    Description: "Running: A spot instance for Server 23 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName23:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 23 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 24 - Server Specific Variables
  # ====================================================

  ServerState24:
    Type: String
    Description: "Running: A spot instance for Server 24 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName24:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 24 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 25 - Server Specific Variables
  # ====================================================

  ServerState25:
    Type: String
    Description: "Running: A spot instance for Server 25 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName25:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 25 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 26 - Server Specific Variables
  # ====================================================

  ServerState26:
    Type: String
    Description: "Running: A spot instance for Server 26 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName26:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 26 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 27 - Server Specific Variables
  # ====================================================

  ServerState27:
    Type: String
    Description: "Running: A spot instance for Server 27 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName27:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 27 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 28 - Server Specific Variables
  # ====================================================

  ServerState28:
    Type: String
    Description: "Running: A spot instance for Server 28 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName28:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 28 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 29 - Server Specific Variables
  # ====================================================

  ServerState29:
    Type: String
    Description: "Running: A spot instance for Server 29 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName29:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 29 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 30 - Server Specific Variables
  # ====================================================

  ServerState30:
    Type: String
    Description: "Running: A spot instance for Server 30 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName30:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 30 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 31 - Server Specific Variables
  # ====================================================

  ServerState31:
    Type: String
    Description: "Running: A spot instance for Server 31 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName31:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 31 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 32 - Server Specific Variables
  # ====================================================

  ServerState32:
    Type: String
    Description: "Running: A spot instance for Server 32 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName32:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 32 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 33 - Server Specific Variables
  # ====================================================

  ServerState33:
    Type: String
    Description: "Running: A spot instance for Server 33 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName33:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 33 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 34 - Server Specific Variables
  # ====================================================

  ServerState34:
    Type: String
    Description: "Running: A spot instance for Server 34 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName34:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 34 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 35 - Server Specific Variables
  # ====================================================

  ServerState35:
    Type: String
    Description: "Running: A spot instance for Server 35 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName35:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 35 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 36 - Server Specific Variables
  # ====================================================

  ServerState36:
    Type: String
    Description: "Running: A spot instance for Server 36 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName36:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 36 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 37 - Server Specific Variables
  # ====================================================

  ServerState37:
    Type: String
    Description: "Running: A spot instance for Server 37 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName37:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 37 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 38 - Server Specific Variables
  # ====================================================

  ServerState38:
    Type: String
    Description: "Running: A spot instance for Server 38 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName38:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 38 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 39 - Server Specific Variables
  # ====================================================

  ServerState39:
    Type: String
    Description: "Running: A spot instance for Server 39 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName39:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 39 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

  # ====================================================
  # 40 - Server Specific Variables
  # ====================================================

  ServerState40:
    Type: String
    Description: "Running: A spot instance for Server 40 will launch shortly after setting this parameter; your Factorio server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Factorio container) will be terminated shortly after setting this parameter."
    Default: Stopped
    AllowedValues:
    - Running
    - Stopped

  RecordName40:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance for server 40 starts, supply the name of the record here (e.g. factorio.mydomain.com).
    Default: ''

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Essential Configuration
        Parameters:
        - FactorioImageTag
        - EnableRcon
        - UpdateModsOnStart
        - ServerState1
        - ServerState2
        - ServerState3
        - ServerState4
        - ServerState5
        - ServerState6
        - ServerState7
        - ServerState8
        - ServerState9
        - ServerState10
        - ServerState11
        - ServerState12
        - ServerState13
        - ServerState14
        - ServerState15
        - ServerState16
        - ServerState17
        - ServerState18
        - ServerState19
        - ServerState20
        - ServerState21
        - ServerState22
        - ServerState23
        - ServerState24
        - ServerState25
        - ServerState26
        - ServerState27
        - ServerState28
        - ServerState29
        - ServerState30
        - ServerState31
        - ServerState32
        - ServerState33
        - ServerState34
        - ServerState35
        - ServerState36
        - ServerState37
        - ServerState38
        - ServerState39
        - ServerState40
      - Label:
          default: Instance Configuration
        Parameters:
        - InstancePurchaseMode
        - InstanceType
        - SpotPrice
        - SpotMinMemoryMiB
        - SpotMinVCpuCount
      - Label:
          default: Remote Access (SSH) Configuration (Optional)
        Parameters:
        - KeyPairName
        - YourIp
      - Label:
          default: DNS Configuration (Optional)
        Parameters:
        - HostedZoneId
        - RecordName1
        - RecordName2
        - RecordName3
        - RecordName4
        - RecordName5
        - RecordName6
        - RecordName7
        - RecordName8
        - RecordName9
        - RecordName10
        - RecordName11
        - RecordName12
        - RecordName13
        - RecordName14
        - RecordName15
        - RecordName16
        - RecordName17
        - RecordName18
        - RecordName19
        - RecordName20
        - RecordName21
        - RecordName22
        - RecordName23
        - RecordName24
        - RecordName25
        - RecordName26
        - RecordName27
        - RecordName28
        - RecordName29
        - RecordName30
        - RecordName31
        - RecordName32
        - RecordName33
        - RecordName34
        - RecordName35
        - RecordName36
        - RecordName37
        - RecordName38
        - RecordName39
        - RecordName40
    ParameterLabels:
      FactorioImageTag:
        default: "Which version of Factorio do you want to launch?"
      InstanceType:
        default: "Which instance type? You must make sure this is available in your region! https://aws.amazon.com/ec2/pricing/on-demand/"
      KeyPairName:
        default: "If you wish to access the instance via SSH, select a Key Pair to use. https://console.aws.amazon.com/ec2/v2/home?#KeyPairs:sort=keyName"
      YourIp:
        default: "If you wish to access the instance via SSH, provide your public IP address."
      HostedZoneId:
        default: "If you have a hosted zone in Route 53 and wish to update a DNS record whenever your Factorio instance starts, supply the hosted zone ID here."
      EnableRcon:
        default: "Do you wish to enable RCON?"
      UpdateModsOnStart:
        default: "Do you wish to update your mods on container start"
      ServerState1:
        default: "Update this parameter to shut down / start up your Factorio server 1 as required to save on cost. Takes a few minutes to take effect."
      RecordName1:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 1 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState2:
        default: "Update this parameter to shut down / start up your Factorio server 2 as required to save on cost. Takes a few minutes to take effect."
      RecordName2:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 2 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState3:
        default: "Update this parameter to shut down / start up your Factorio server 3 as required to save on cost. Takes a few minutes to take effect."
      RecordName3:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 3 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState4:
        default: "Update this parameter to shut down / start up your Factorio server 4 as required to save on cost. Takes a few minutes to take effect."
      RecordName4:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 4 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState5:
        default: "Update this parameter to shut down / start up your Factorio server 5 as required to save on cost. Takes a few minutes to take effect."
      RecordName5:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 5 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState6:
        default: "Update this parameter to shut down / start up your Factorio server 6 as required to save on cost. Takes a few minutes to take effect."
      RecordName6:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 6 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState7:
        default: "Update this parameter to shut down / start up your Factorio server 7 as required to save on cost. Takes a few minutes to take effect."
      RecordName7:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 7 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState8:
        default: "Update this parameter to shut down / start up your Factorio server 8 as required to save on cost. Takes a few minutes to take effect."
      RecordName8:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 8 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState9:
        default: "Update this parameter to shut down / start up your Factorio server 9 as required to save on cost. Takes a few minutes to take effect."
      RecordName9:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 9 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState10:
        default: "Update this parameter to shut down / start up your Factorio server 10 as required to save on cost. Takes a few minutes to take effect."
      RecordName10:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 10 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState11:
        default: "Update this parameter to shut down / start up your Factorio server 11 as required to save on cost. Takes a few minutes to take effect."
      RecordName11:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 11 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState12:
        default: "Update this parameter to shut down / start up your Factorio server 12 as required to save on cost. Takes a few minutes to take effect."
      RecordName12:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 12 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState13:
        default: "Update this parameter to shut down / start up your Factorio server 13 as required to save on cost. Takes a few minutes to take effect."
      RecordName13:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 13 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState14:
        default: "Update this parameter to shut down / start up your Factorio server 14 as required to save on cost. Takes a few minutes to take effect."
      RecordName14:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 14 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState15:
        default: "Update this parameter to shut down / start up your Factorio server 15 as required to save on cost. Takes a few minutes to take effect."
      RecordName15:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 15 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState16:
        default: "Update this parameter to shut down / start up your Factorio server 16 as required to save on cost. Takes a few minutes to take effect."
      RecordName16:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 16 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState17:
        default: "Update this parameter to shut down / start up your Factorio server 17 as required to save on cost. Takes a few minutes to take effect."
      RecordName17:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 17 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState18:
        default: "Update this parameter to shut down / start up your Factorio server 18 as required to save on cost. Takes a few minutes to take effect."
      RecordName18:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 18 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState19:
        default: "Update this parameter to shut down / start up your Factorio server 19 as required to save on cost. Takes a few minutes to take effect."
      RecordName19:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 19 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState20:
        default: "Update this parameter to shut down / start up your Factorio server 20 as required to save on cost. Takes a few minutes to take effect."
      RecordName20:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 20 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState21:
        default: "Update this parameter to shut down / start up your Factorio server 21 as required to save on cost. Takes a few minutes to take effect."
      RecordName21:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 21 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState22:
        default: "Update this parameter to shut down / start up your Factorio server 22 as required to save on cost. Takes a few minutes to take effect."
      RecordName22:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 22 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState23:
        default: "Update this parameter to shut down / start up your Factorio server 23 as required to save on cost. Takes a few minutes to take effect."
      RecordName23:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 23 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState24:
        default: "Update this parameter to shut down / start up your Factorio server 24 as required to save on cost. Takes a few minutes to take effect."
      RecordName24:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 24 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState25:
        default: "Update this parameter to shut down / start up your Factorio server 25 as required to save on cost. Takes a few minutes to take effect."
      RecordName25:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 25 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState26:
        default: "Update this parameter to shut down / start up your Factorio server 26 as required to save on cost. Takes a few minutes to take effect."
      RecordName26:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 26 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState27:
        default: "Update this parameter to shut down / start up your Factorio server 27 as required to save on cost. Takes a few minutes to take effect."
      RecordName27:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 27 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState28:
        default: "Update this parameter to shut down / start up your Factorio server 28 as required to save on cost. Takes a few minutes to take effect."
      RecordName28:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 28 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState29:
        default: "Update this parameter to shut down / start up your Factorio server 29 as required to save on cost. Takes a few minutes to take effect."
      RecordName29:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 29 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState30:
        default: "Update this parameter to shut down / start up your Factorio server 30 as required to save on cost. Takes a few minutes to take effect."
      RecordName30:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 30 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState31:
        default: "Update this parameter to shut down / start up your Factorio server 31 as required to save on cost. Takes a few minutes to take effect."
      RecordName31:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 31 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState32:
        default: "Update this parameter to shut down / start up your Factorio server 32 as required to save on cost. Takes a few minutes to take effect."
      RecordName32:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 32 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState33:
        default: "Update this parameter to shut down / start up your Factorio server 33 as required to save on cost. Takes a few minutes to take effect."
      RecordName33:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 33 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState34:
        default: "Update this parameter to shut down / start up your Factorio server 34 as required to save on cost. Takes a few minutes to take effect."
      RecordName34:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 34 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState35:
        default: "Update this parameter to shut down / start up your Factorio server 35 as required to save on cost. Takes a few minutes to take effect."
      RecordName35:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 35 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState36:
        default: "Update this parameter to shut down / start up your Factorio server 36 as required to save on cost. Takes a few minutes to take effect."
      RecordName36:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 36 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState37:
        default: "Update this parameter to shut down / start up your Factorio server 37 as required to save on cost. Takes a few minutes to take effect."
      RecordName37:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 37 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState38:
        default: "Update this parameter to shut down / start up your Factorio server 38 as required to save on cost. Takes a few minutes to take effect."
      RecordName38:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 38 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState39:
        default: "Update this parameter to shut down / start up your Factorio server 39 as required to save on cost. Takes a few minutes to take effect."
      RecordName39:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 39 starts, supply a record name here (e.g. factorio.mydomain.com)."
      ServerState40:
        default: "Update this parameter to shut down / start up your Factorio server 40 as required to save on cost. Takes a few minutes to take effect."
      RecordName40:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Factorio instance server 40 starts, supply a record name here (e.g. factorio.mydomain.com)."
Conditions:
  KeyPairNameProvided: !Not [ !Equals [ !Ref KeyPairName, '' ] ]
  IpAddressProvided: !Not [ !Equals [ !Ref YourIp, '' ] ]
  DoEnableRcon: !Equals [ !Ref EnableRcon, 'true' ]
  DnsConfigEnabled: !Not [ !Equals [ !Ref HostedZoneId, '' ] ]
  UsingSpotInstance: !Equals [ !Ref InstancePurchaseMode, 'Spot' ]
  InstanceTypeProvided: !Not [ !Equals [ !Ref InstanceType, '' ] ]

Mappings:
  ServerState:
    Running:
      DesiredCapacity: 1
    Stopped:
      DesiredCapacity: 0

Resources:

  # ====================================================
  # BASIC VPC
  # ====================================================

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.100.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - [!Ref 'AWS::StackName', 'vpc']

  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
      - 0
      - !GetAZs
        Ref: 'AWS::Region'
      CidrBlock: !Select [ 0, !Cidr [ 10.100.0.0/24, 2, 7 ] ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: true

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
      - 1
      - !GetAZs
        Ref: 'AWS::Region'
      CidrBlock: !Select [ 1, !Cidr [ 10.100.0.0/24, 2, 7 ] ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: true

  SubnetARoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA

  SubnetBRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: {}

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  # ====================================================
  # Common Resources
  # ====================================================

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "route53:*"
                Resource: "*"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  # ====================================================
  # EFS FOR PERSISTENT DATA
  # ====================================================

  Efs:
    Type: AWS::EFS::FileSystem
    DeletionPolicy: Retain
    Properties:
      LifecyclePolicies:
      - TransitionToIA: AFTER_7_DAYS
      - TransitionToPrimaryStorageClass: AFTER_1_ACCESS
      FileSystemTags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-fs"

  MountA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref Efs
      SecurityGroups:
      - !Ref EfsSg
      SubnetId: !Ref SubnetA

  MountB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref Efs
      SecurityGroups:
      - !Ref EfsSg
      SubnetId: !Ref SubnetB

  EfsSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-efs"
      GroupDescription: !Sub "${AWS::StackName}-efs"
      SecurityGroupIngress:
      - FromPort: 2049
        ToPort: 2049
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref Ec2Sg
      VpcId: !Ref Vpc

  EFSAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref Efs
      PosixUser:
        Uid: "1000"
        Gid: "1000"

  CreateEFSSubdirectoriesLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-create-sub-directories"
      Handler: index.handler
      Role: !GetAtt ExecuteLambdaRole.Arn
      Code:
        ZipFile: |
          import os
          import cfnresponse

          def handler(event, context):
            try:
              if event['RequestType'] in ['Create']:
                dirs = event['ResourceProperties']['Directories']

                # Create directories
                for dir in dirs:
                  os.makedirs(f'/mnt/efs/{dir}', exist_ok=True)

              cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
            except Exception as e:
              cfnresponse.send(event, context, cfnresponse.FAILED, {"Error": str(e)})
      Runtime: python3.12
      MemorySize: 128
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - !Ref EfsSg
        SubnetIds:
          - !Ref SubnetA
          - !Ref SubnetB
      FileSystemConfigs:
        - Arn: !GetAtt EFSAccessPoint.Arn
          LocalMountPath: /mnt/efs

  CreateEFSSubdirectories:
    Type: Custom::CreateEFSSubdirectories
    DependsOn:
      - CreateEFSSubdirectoriesLambda
    Properties:
      ServiceToken: !GetAtt CreateEFSSubdirectoriesLambda.Arn
      AccessPointId: !Ref EFSAccessPoint
      Directories:
        - factorio-1
        - factorio-2
        - factorio-3
        - factorio-4
        - factorio-5
        - factorio-6
        - factorio-7
        - factorio-8
        - factorio-9
        - factorio-10
        - factorio-11
        - factorio-12
        - factorio-13
        - factorio-14
        - factorio-15
        - factorio-16
        - factorio-17
        - factorio-18
        - factorio-19
        - factorio-20
        - factorio-21
        - factorio-22
        - factorio-23
        - factorio-24
        - factorio-25
        - factorio-26
        - factorio-27
        - factorio-28
        - factorio-29
        - factorio-30
        - factorio-31
        - factorio-32
        - factorio-33
        - factorio-34
        - factorio-35
        - factorio-36
        - factorio-37
        - factorio-38
        - factorio-39
        - factorio-40

  # ====================================================
  # EC2 Common
  # ====================================================

  Ec2Sg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-ec2"
      GroupDescription: !Sub "${AWS::StackName}-ec2"
      SecurityGroupIngress:
      - !If
        - IpAddressProvided
        - FromPort: 22
          ToPort: 22
          IpProtocol: tcp
          CidrIp: !Sub "${YourIp}/32"
        - !Ref 'AWS::NoValue'
      - FromPort: 34197
        ToPort: 34197
        IpProtocol: udp
        CidrIp: 0.0.0.0/0
      - !If
        - DoEnableRcon
        - FromPort: 27015
          ToPort: 27015
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
        - !Ref 'AWS::NoValue'
      VpcId: !Ref Vpc

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: !Ref ECSAMI
        SecurityGroupIds:
        - !Ref Ec2Sg
        KeyName:
          !If [ KeyPairNameProvided, !Ref KeyPairName, !Ref 'AWS::NoValue' ]
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            echo ECS_CLUSTER=${EcsCluster} >> /etc/ecs/ecs.config

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-cluster"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup1:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-1"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState1, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState1, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState1, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService1:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState1, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-1"
      TaskDefinition: !Ref EcsTask1
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask1:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-1"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-1
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-1"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup2:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-2"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState2, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState2, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState2, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService2:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState2, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-2"
      TaskDefinition: !Ref EcsTask2
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask2:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-2"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-2
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-2"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup3:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-3"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState3, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState3, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState3, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService3:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState3, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-3"
      TaskDefinition: !Ref EcsTask3
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask3:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-3"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-3
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-3"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup4:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-4"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState4, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState4, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState4, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService4:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState4, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-4"
      TaskDefinition: !Ref EcsTask4
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask4:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-4"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-4
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-4"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup5:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-5"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState5, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState5, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState5, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService5:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState5, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-5"
      TaskDefinition: !Ref EcsTask5
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask5:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-5"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-5
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-5"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup6:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-6"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState6, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState6, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState6, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService6:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState6, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-6"
      TaskDefinition: !Ref EcsTask6
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask6:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-6"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-6
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-6"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup7:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-7"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState7, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState7, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState7, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService7:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState7, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-7"
      TaskDefinition: !Ref EcsTask7
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask7:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-7"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-7
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-7"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup8:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-8"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState8, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState8, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState8, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService8:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState8, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-8"
      TaskDefinition: !Ref EcsTask8
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask8:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-8"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-8
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-8"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup9:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-9"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState9, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState9, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState9, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService9:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState9, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-9"
      TaskDefinition: !Ref EcsTask9
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask9:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-9"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-9
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-9"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup10:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-10"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState10, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState10, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState10, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService10:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState10, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-10"
      TaskDefinition: !Ref EcsTask10
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask10:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-10"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-10
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-10"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup11:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-11"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState11, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState11, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState11, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService11:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState11, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-11"
      TaskDefinition: !Ref EcsTask11
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask11:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-11"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-11
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-11"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup12:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-12"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState12, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState12, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState12, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService12:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState12, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-12"
      TaskDefinition: !Ref EcsTask12
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask12:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-12"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-12
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-12"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup13:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-13"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState13, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState13, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState13, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService13:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState13, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-13"
      TaskDefinition: !Ref EcsTask13
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask13:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-13"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-13
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-13"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup14:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-14"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState14, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState14, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState14, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService14:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState14, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-14"
      TaskDefinition: !Ref EcsTask14
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask14:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-14"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-14
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-14"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup15:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-15"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState15, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState15, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState15, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService15:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState15, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-15"
      TaskDefinition: !Ref EcsTask15
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask15:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-15"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-15
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-15"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup16:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-16"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState16, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState16, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState16, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService16:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState16, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-16"
      TaskDefinition: !Ref EcsTask16
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask16:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-16"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-16
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-16"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup17:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-17"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState17, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState17, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState17, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService17:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState17, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-17"
      TaskDefinition: !Ref EcsTask17
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask17:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-17"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-17
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-17"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup18:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-18"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState18, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState18, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState18, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService18:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState18, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-18"
      TaskDefinition: !Ref EcsTask18
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask18:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-18"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-18
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-18"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup19:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-19"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState19, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState19, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState19, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService19:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState19, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-19"
      TaskDefinition: !Ref EcsTask19
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask19:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-19"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-19
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-19"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup20:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-20"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState20, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState20, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState20, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService20:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState20, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-20"
      TaskDefinition: !Ref EcsTask20
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask20:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-20"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-20
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-20"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup21:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-21"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState21, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState21, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState21, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService21:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState21, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-21"
      TaskDefinition: !Ref EcsTask21
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask21:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-21"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-21
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-21"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup22:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-22"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState22, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState22, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState22, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService22:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState22, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-22"
      TaskDefinition: !Ref EcsTask22
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask22:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-22"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-22
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-22"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup23:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-23"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState23, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState23, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState23, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService23:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState23, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-23"
      TaskDefinition: !Ref EcsTask23
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask23:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-23"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-23
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-23"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup24:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-24"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState24, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState24, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState24, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService24:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState24, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-24"
      TaskDefinition: !Ref EcsTask24
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask24:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-24"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-24
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-24"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup25:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-25"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState25, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState25, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState25, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService25:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState25, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-25"
      TaskDefinition: !Ref EcsTask25
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask25:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-25"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-25
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-25"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup26:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-26"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState26, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState26, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState26, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService26:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState26, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-26"
      TaskDefinition: !Ref EcsTask26
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask26:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-26"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-26
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-26"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup27:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-27"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState27, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState27, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState27, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService27:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState27, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-27"
      TaskDefinition: !Ref EcsTask27
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask27:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-27"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-27
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-27"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup28:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-28"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState28, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState28, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState28, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService28:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState28, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-28"
      TaskDefinition: !Ref EcsTask28
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask28:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-28"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-28
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-28"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup29:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-29"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState29, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState29, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState29, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService29:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState29, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-29"
      TaskDefinition: !Ref EcsTask29
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask29:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-29"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-29
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-29"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup30:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-30"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState30, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState30, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState30, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService30:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState30, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-30"
      TaskDefinition: !Ref EcsTask30
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask30:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-30"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-30
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-30"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup31:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-31"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState31, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState31, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState31, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService31:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState31, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-31"
      TaskDefinition: !Ref EcsTask31
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask31:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-31"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-31
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-31"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup32:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-32"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState32, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState32, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState32, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService32:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState32, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-32"
      TaskDefinition: !Ref EcsTask32
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask32:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-32"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-32
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-32"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup33:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-33"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState33, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState33, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState33, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService33:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState33, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-33"
      TaskDefinition: !Ref EcsTask33
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask33:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-33"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-33
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-33"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup34:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-34"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState34, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState34, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState34, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService34:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState34, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-34"
      TaskDefinition: !Ref EcsTask34
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask34:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-34"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-34
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-34"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup35:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-35"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState35, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState35, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState35, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService35:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState35, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-35"
      TaskDefinition: !Ref EcsTask35
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask35:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-35"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-35
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-35"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup36:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-36"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState36, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState36, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState36, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService36:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState36, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-36"
      TaskDefinition: !Ref EcsTask36
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask36:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-36"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-36
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-36"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup37:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-37"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState37, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState37, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState37, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService37:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState37, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-37"
      TaskDefinition: !Ref EcsTask37
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask37:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-37"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-37
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-37"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup38:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-38"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState38, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState38, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState38, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService38:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState38, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-38"
      TaskDefinition: !Ref EcsTask38
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask38:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-38"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-38
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-38"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup39:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-39"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState39, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState39, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState39, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService39:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState39, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-39"
      TaskDefinition: !Ref EcsTask39
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask39:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-39"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-39
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-39"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # INSTANCE CONFIG - 40
  # ====================================================

  AutoScalingGroup40:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg-40"
      DesiredCapacity: !FindInMap [ ServerState, !Ref ServerState40, DesiredCapacity ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity:
            !If [ UsingSpotInstance, 0, 100 ]
          SpotAllocationStrategy: lowest-price
          SpotMaxPrice:
            !If [ UsingSpotInstance, !Ref SpotPrice, !Ref AWS::NoValue ]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
           - Fn::If:
             - InstanceTypeProvided
             - InstanceType: !Ref InstanceType
             - InstanceRequirements:
                 MemoryMiB:
                   Min: !Ref SpotMinMemoryMiB
                 VCpuCount:
                   Min: !Ref SpotMinVCpuCount
      MaxSize: !FindInMap [ ServerState, !Ref ServerState40, DesiredCapacity ]
      MinSize: !FindInMap [ ServerState, !Ref ServerState40, DesiredCapacity ]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  EcsService40:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ ServerState, !Ref ServerState40, DesiredCapacity ]
      ServiceName: !Sub "${AWS::StackName}-ecs-service-40"
      TaskDefinition: !Ref EcsTask40
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask40:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
    - MountA
    - MountB
    - CreateEFSSubdirectories
    Properties:
      Volumes:
      - Name: !Sub "${AWS::StackName}-factorio-40"
        EFSVolumeConfiguration:
          FilesystemId: !Ref Efs
          TransitEncryption: ENABLED
          RootDirectory: /factorio-40
      ContainerDefinitions:
        - Name: factorio
          MemoryReservation: 1024
          Image: !Sub "factoriotools/factorio:${FactorioImageTag}"
          PortMappings:
          - ContainerPort: 34197
            HostPort: 34197
            Protocol: udp
          - ContainerPort: 27015
            HostPort: 27015
            Protocol: tcp
          MountPoints:
          - ContainerPath: /factorio
            SourceVolume: !Sub "${AWS::StackName}-factorio-40"
            ReadOnly: false
          Environment:
          - Name: UPDATE_MODS_ON_START
            Value: !Sub "${UpdateModsOnStart}"

  # ====================================================
  # SET DNS RECORD - For all ASGs and EC2 instances
  # ====================================================

  ExecuteLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemClientFullAccess
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "route53:*"
                Resource: "*"
              - Effect: "Allow"
                Action: "ec2:DescribeInstance*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "elasticfilesystem:ClientMount"
                  - "elasticfilesystem:ClientWrite"
                  - "elasticfilesystem:DescribeMountTargets"
                Resource: "*"

  SetDNSRecordLambda:
    Type: "AWS::Lambda::Function"
    Condition: DnsConfigEnabled
    Properties:
      Environment:
        Variables:
          HostedZoneId: !Ref HostedZoneId
          ASGRecordMap: !Join [",", [
            !Sub "${AutoScalingGroup1}:${RecordName1}",
            !Sub "${AutoScalingGroup2}:${RecordName2}",
            !Sub "${AutoScalingGroup3}:${RecordName3}",
            !Sub "${AutoScalingGroup4}:${RecordName4}",
            !Sub "${AutoScalingGroup5}:${RecordName5}",
            !Sub "${AutoScalingGroup6}:${RecordName6}",
            !Sub "${AutoScalingGroup7}:${RecordName7}",
            !Sub "${AutoScalingGroup8}:${RecordName8}",
            !Sub "${AutoScalingGroup9}:${RecordName9}",
            !Sub "${AutoScalingGroup10}:${RecordName10}",
            !Sub "${AutoScalingGroup11}:${RecordName11}",
            !Sub "${AutoScalingGroup12}:${RecordName12}",
            !Sub "${AutoScalingGroup13}:${RecordName13}",
            !Sub "${AutoScalingGroup14}:${RecordName14}",
            !Sub "${AutoScalingGroup15}:${RecordName15}",
            !Sub "${AutoScalingGroup16}:${RecordName16}",
            !Sub "${AutoScalingGroup17}:${RecordName17}",
            !Sub "${AutoScalingGroup18}:${RecordName18}",
            !Sub "${AutoScalingGroup19}:${RecordName19}",
            !Sub "${AutoScalingGroup20}:${RecordName20}",
            !Sub "${AutoScalingGroup21}:${RecordName21}",
            !Sub "${AutoScalingGroup22}:${RecordName22}",
            !Sub "${AutoScalingGroup23}:${RecordName23}",
            !Sub "${AutoScalingGroup24}:${RecordName24}",
            !Sub "${AutoScalingGroup25}:${RecordName25}",
            !Sub "${AutoScalingGroup26}:${RecordName26}",
            !Sub "${AutoScalingGroup27}:${RecordName27}",
            !Sub "${AutoScalingGroup28}:${RecordName28}",
            !Sub "${AutoScalingGroup29}:${RecordName29}",
            !Sub "${AutoScalingGroup30}:${RecordName30}",
            !Sub "${AutoScalingGroup31}:${RecordName31}",
            !Sub "${AutoScalingGroup32}:${RecordName32}",
            !Sub "${AutoScalingGroup33}:${RecordName33}",
            !Sub "${AutoScalingGroup34}:${RecordName34}",
            !Sub "${AutoScalingGroup35}:${RecordName35}",
            !Sub "${AutoScalingGroup36}:${RecordName36}",
            !Sub "${AutoScalingGroup37}:${RecordName37}",
            !Sub "${AutoScalingGroup38}:${RecordName38}",
            !Sub "${AutoScalingGroup39}:${RecordName39}",
            !Sub "${AutoScalingGroup40}:${RecordName40}",
          ]]
      Code:
        ZipFile: |
          import boto3
          import os

          def handler(event, context):
            asg_name = event['detail']['AutoScalingGroupName']

            # Parse the ASG to record name mapping
            asg_record_map = dict(item.split(':') for item in os.environ['ASGRecordMap'].split(','))

            # Get the record name for the current ASG
            record_name = asg_record_map.get(asg_name)
            if not record_name:
              raise ValueError(f"No record name mapping found for ASG: {asg_name}")

            new_instance = boto3.resource('ec2').Instance(event['detail']['EC2InstanceId'])
            boto3.client('route53').change_resource_record_sets(
              HostedZoneId= os.environ['HostedZoneId'],
              ChangeBatch={
                  'Comment': f'Updating DNS for {asg_name}',
                  'Changes': [
                      {
                          'Action': 'UPSERT',
                          'ResourceRecordSet': {
                              'Name': record_name,
                              'Type': 'A',
                              'TTL': 60,
                              'ResourceRecords': [
                                  {
                                      'Value': new_instance.public_ip_address
                                  },
                              ]
                          }
                      },
                  ]
              })
      Description: Sets Route 53 DNS Record based on ASG name
      FunctionName: !Sub "${AWS::StackName}-set-dns"
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt ExecuteLambdaRole.Arn
      Runtime: python3.12
      Timeout: 20

  LaunchEvent:
    Type: AWS::Events::Rule
    Condition: DnsConfigEnabled
    Properties:
      EventPattern:
        source:
        - aws.autoscaling
        detail-type:
        - EC2 Instance Launch Successful
        detail:
          AutoScalingGroupName:
          - !Ref AutoScalingGroup1
          - !Ref AutoScalingGroup2
          - !Ref AutoScalingGroup3
          - !Ref AutoScalingGroup4
          - !Ref AutoScalingGroup5
          - !Ref AutoScalingGroup6
          - !Ref AutoScalingGroup7
          - !Ref AutoScalingGroup8
          - !Ref AutoScalingGroup9
          - !Ref AutoScalingGroup10
          - !Ref AutoScalingGroup11
          - !Ref AutoScalingGroup12
          - !Ref AutoScalingGroup13
          - !Ref AutoScalingGroup14
          - !Ref AutoScalingGroup15
          - !Ref AutoScalingGroup16
          - !Ref AutoScalingGroup17
          - !Ref AutoScalingGroup18
          - !Ref AutoScalingGroup19
          - !Ref AutoScalingGroup20
          - !Ref AutoScalingGroup21
          - !Ref AutoScalingGroup22
          - !Ref AutoScalingGroup23
          - !Ref AutoScalingGroup24
          - !Ref AutoScalingGroup25
          - !Ref AutoScalingGroup26
          - !Ref AutoScalingGroup27
          - !Ref AutoScalingGroup28
          - !Ref AutoScalingGroup29
          - !Ref AutoScalingGroup30
          - !Ref AutoScalingGroup31
          - !Ref AutoScalingGroup32
          - !Ref AutoScalingGroup33
          - !Ref AutoScalingGroup34
          - !Ref AutoScalingGroup35
          - !Ref AutoScalingGroup36
          - !Ref AutoScalingGroup37
          - !Ref AutoScalingGroup38
          - !Ref AutoScalingGroup39
          - !Ref AutoScalingGroup40
      Name: !Sub "${AWS::StackName}-instance-launch"
      State: ENABLED
      Targets:
        - Arn: !GetAtt SetDNSRecordLambda.Arn
          Id: !Sub "${AWS::StackName}-set-dns"

  LaunchEventLambdaPermission:
    Type: AWS::Lambda::Permission
    Condition: DnsConfigEnabled
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SetDNSRecordLambda.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LaunchEvent.Arn
